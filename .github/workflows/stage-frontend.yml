name: Deploy stage dublog-frontend app using Argo

on:
  workflow_dispatch:
  push:
    branches:
      - develop

concurrency:
  group: "${{ github.workflow }}-${{ github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  build-deploy:
    name: Build and deploy stage dublog-frontend
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set image version
        id: get-image-tag
        run: |
          GIT_HASH=$(git rev-parse --short "${GITHUB_SHA}")
          echo "image_tag=${GITHUB_REF##*/}-${GIT_HASH}" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.ET_DOCKERHUB_USERNAME }}
          password: ${{ secrets.ET_DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./frontend
          build-args: |
            ENV=stage
            API_URL=https://stage-dublog-api.citizix.com
          tags: ektowett/dublog-frontend:${{ steps.get-image-tag.outputs.image_tag }}

      - name: helm template and update argo deploy image
        shell: bash
        run: |
          helm repo add citizix https://etowett.github.io/helm-charts

          helm fetch citizix/app --version 1.0.1 --untar

          helm template dublog-frontend ./app \
            --set image.tag=${{ steps.get-image-tag.outputs.image_tag }} \
            --namespace=stage \
            -f helm/stage-frontend.yml \
            --output-dir stage/${{ steps.get-image-tag.outputs.image_tag }}

          cd stage/${{ steps.get-image-tag.outputs.image_tag }}
          cp app/templates/*.yaml .
          rm -rf app
          cd ../../

          git config --global user.email ektowett@gmail.com
          git config --global user.name etowett
          git clone https://etowett:${{ secrets.ET_GIT_TOKEN }}@github.com/etowett/argo-k8s-releases.git
          cd argo-k8s-releases
          git checkout main

          mkdir -p apps/dublog/frontend/stage/${{ steps.get-image-tag.outputs.image_tag }}
          cp ../stage/${{ steps.get-image-tag.outputs.image_tag }}/* apps/dublog/frontend/stage/${{ steps.get-image-tag.outputs.image_tag }}
          git add apps/dublog/frontend/stage/${{ steps.get-image-tag.outputs.image_tag }}

          echo "update argocd application deployment"
          OLD_PATH=`cat argocd-apps/stage-dublog-frontend.yml | grep path | awk '{print $2}'`
          OLD_TAG=`basename $OLD_PATH`
          sed -i "s/$OLD_TAG/${{ steps.get-image-tag.outputs.image_tag }}/" argocd-apps/stage-dublog-frontend.yml
          git add argocd-apps/stage-dublog-frontend.yml

          git commit -m "pushed from $GITHUB_REF update stage dublog-frontend ${{ steps.get-image-tag.outputs.image_tag }}"
          git push origin main

      - name: Notify slack of deploy status
        uses: lazy-actions/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: "*dublog-frontend argocd build - ${{ steps.get-image-tag.outputs.image_tag }}*"
          mention: "here"
          mention_if: "failure"
          channel: "#deploys"
          url: ${{ secrets.ET_SLACK_WEBHOOK }}
